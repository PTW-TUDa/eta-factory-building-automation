<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.10">
  <POU Name="FB_OPC_UA_Read" Id="{5b4993fc-a53f-46aa-abc1-e9e6af639c60}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_OPC_UA_Read
VAR_INPUT
	stNode				: ST_OPC_UANode;
	sOPC_UA_Server_Url 	: STRING;
	sNamespaceName		: STRING;
END_VAR
VAR_OUTPUT
END_VAR
VAR
	Node : ST_OPC_UANode;

	iState		: INT 	:= 0;
	bBusy		: BOOL;
	bError		: BOOL;
	nErrorID	: DWORD;

	SessionConnectInfo		: ST_UASessionConnectInfo;
	sOpcUA_URL				: STRING(MAX_STRING_LENGTH);
	nConnectionHdl			: DWORD;
	nNamespaceIndex			: UINT;

	fbUA_Connect			: UA_Connect;
	fbUA_GetNamespaceIndex	: UA_GetNamespaceIndex;
	fbUA_NodeGetHandle		: UA_NodeGetHandle;
	fbUA_Read				: UA_Read;
	fbUA_NodeReleaseHandle	: UA_NodeReleaseHandle;
	fbUA_Disconnect			: UA_Disconnect;

	stIndexRange			: ARRAY [1..nMaxIndexRange] OF ST_UAIndexRange;
	nIndexRangeCount		: UINT := 0;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[
CASE iState OF
	0: (* Start *)
		bError		:= FALSE;
		nErrorID	:= 0;

		(* Parameterize *)
		sOpcUA_URL						:= sOPC_UA_Server_Url;	(* OpcUA Url of the device with ip address *)

		SessionConnectInfo.tConnectTimeout 	:= T#1M;
		SessionConnectInfo.tSessionTimeout 	:= T#1M;
		SessionConnectInfo.sApplicationName	:= '';
		SessionConnectInfo.eSecurityMode 		:= eUASecurityMsgMode_None;
		SessionConnectInfo.eSecurityPolicyUri 	:= eUASecurityPolicy_None;
		SessionConnectInfo.eTransportProfileUri := eUATransportProfileUri_UATcp;

		stIndexRange[1].nStartIndex := 0;
		stIndexRange[1].nEndIndex := 1;
		Node := stNode;
		iState := iState + 1;

	1:	(* open UA session *)
		fbUA_Connect(
			Execute				:= TRUE,
			ServerURL			:= sOpcUA_URL,
			SessionConnectInfo	:= SessionConnectInfo,
			Timeout				:= T#5S,
			ConnectionHdl		=> nConnectionHdl
		);
		
		IF NOT fbUA_Connect.Busy THEN
			fbUA_Connect(Execute := FALSE);
	
			IF NOT fbUA_Connect.Error THEN
				(* session open *)
				iState := iState + 1;
			ELSE
				bError			:= TRUE;
				nErrorID		:= fbUA_Connect.ErrorID;
				nConnectionHdl	:= 0;
				iState 			:= 0;
			END_IF
		END_IF

		
	2:	(* Get Namespace Index *)

		fbUA_GetNamespaceIndex(
			Execute			:= TRUE,
			ConnectionHdl	:= nConnectionHdl,
			NamespaceUri	:= sNamespaceName,
			NamespaceIndex	=> Node.NodeID.nNamespaceIndex
		);


		IF NOT fbUA_GetNamespaceIndex.Busy THEN
			fbUA_GetNamespaceIndex(Execute := FALSE);
			IF NOT fbUA_GetNamespaceIndex.Error THEN
				iState		:= iState +1;
			ELSE
				bError		:= TRUE;
				nErrorID	:= fbUA_GetNamespaceIndex.ErrorID;
				iState 		:= 6;
			END_IF
		END_IF
	
	3:	(* Get Node Handle *)
		fbUA_NodeGetHandle(
			Execute			:= TRUE,
			ConnectionHdl	:= nConnectionHdl,
			NodeID			:= Node.NodeID,
			NodeHdl			=> Node.NodeHdl
		);

		IF NOT fbUA_NodeGetHandle.Busy THEN
			fbUA_NodeGetHandle(Execute := FALSE);
	
			IF NOT fbUA_NodeGetHandle.Error THEN
				iState		:= iState +1;
			ELSE
				bError		:= TRUE;
				nErrorID	:= fbUA_NodeGetHandle.ErrorID;
				iState 		:= 6;
			END_IF
		END_IF
	
	
	4: 	(* UA_Read *)
		fbUA_Read(
			Execute			:= TRUE,
			ConnectionHdl	:= nConnectionHdl,
			NodeHdl			:= Node.NodeHdl,
			cbData			:= Node.SizeOfDataType,
			stNodeAddInfo 	:= Node.NodeAddInfo,
			pVariable		:= Node.TargetVar
			);
	
		IF NOT fbUA_Read.Busy THEN
			fbUA_Read( Execute := FALSE);

			IF NOT fbUA_Read.Error THEN
				iState		:= iState+1;
			ELSE
				bError		:= TRUE;
				nErrorID	:= fbUA_Read.ErrorID;
				iState 		:= 6;
			END_IF
		END_IF


	5:	(* Release Node Handle *)
		fbUA_NodeReleaseHandle(
			Execute			:= TRUE,
			ConnectionHdl	:= nConnectionHdl,
			NodeHdl			:= Node.NodeHdl
		);

		IF NOT fbUA_NodeReleaseHandle.Busy THEN
			fbUA_NodeReleaseHandle(Execute := FALSE);

			IF  NOT fbUA_NodeReleaseHandle.Error THEN
				iState 		:= iState+1;
			ELSE
				bError		:= TRUE;
				nErrorID	:= fbUA_NodeReleaseHandle.ErrorID;
				iState 		:= 6;
			END_IF
		END_IF


	6:	(* close session *)
		fbUA_Disconnect(
			Execute			:= TRUE,
			ConnectionHdl	:= nConnectionHdl
		);
	
		IF NOT fbUA_Disconnect.Busy THEN
			fbUA_Disconnect(Execute := FALSE);
			bBusy := FALSE;
			IF NOT fbUA_Disconnect.Error THEN
				(* session closed *)
				iState 		:= 0;
			ELSE
				bError			:= TRUE;
				nErrorID		:= fbUA_Disconnect.ErrorID;
				iState 			:= 0;
				nConnectionHdl	:= 0;
			END_IF
		END_IF
END_CASE]]></ST>
    </Implementation>
    <LineIds Name="FB_OPC_UA_Read">
      <LineId Id="210" Count="0" />
      <LineId Id="31" Count="26" />
      <LineId Id="217" Count="1" />
      <LineId Id="60" Count="12" />
      <LineId Id="214" Count="0" />
      <LineId Id="73" Count="8" />
      <LineId Id="216" Count="0" />
      <LineId Id="215" Count="0" />
      <LineId Id="83" Count="9" />
      <LineId Id="94" Count="84" />
    </LineIds>
  </POU>
</TcPlcObject>